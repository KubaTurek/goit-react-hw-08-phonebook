{"version":3,"file":"static/js/890.9bea7310.chunk.js","mappings":"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","sources":["Redux/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/contacts.module.css?fa9b","pages/Contacts.js"],"sourcesContent":["export const selectFilter = state => state.filter.filter;\nexport const selectContact = state => state.contacts.items;\nexport const selectisLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilteredContacts = state => {\n  const contacts = selectContact(state);\n  const filter = selectFilter(state);\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactList_contacts__jDmyV\",\"delete\":\"ContactList_delete__dvPUy\",\"list\":\"ContactList_list__csErn\",\"name\":\"ContactList_name__UCkFW\",\"number\":\"ContactList_number__2af8f\",\"li\":\"ContactList_li__dzNT+\",\"icons\":\"ContactList_icons__6G8MG\",\"edit\":\"ContactList_edit__jpzPE\",\"overlay\":\"ContactList_overlay__8HnrZ\",\"modal\":\"ContactList_modal__zxTir\",\"close__button\":\"ContactList_close__button__XCutd\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from '../../Redux/operations.js';\nimport { editContact } from '../../Redux/operations.js';\nimport { useEffect, useState } from 'react';\nimport editIcon from './../../images/edit.png';\nimport { selectFilteredContacts } from './../../Redux/selectors';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [contactToEdit, setContactToEdit] = useState([]);\n\n  const handleOpen = contact => {\n    setContactToEdit({\n      id: contact.id,\n      name: contact.name,\n      number: contact.number,\n    });\n    setIsModalOpen(true);\n  };\n  const handleClose = () => setIsModalOpen(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const refreshContact = e => {\n    e.preventDefault();\n    const name = e.currentTarget.name.value;\n    const number = e.currentTarget.number.value;\n    const editedContact = { id: contactToEdit.id, name, number };\n    dispatch(editContact(editedContact));\n    handleClose();\n  };\n\n  return (\n    <>\n      {isModalOpen && (\n        <div\n          className={css.overlay}\n          data-name=\"overlay\"\n          visible={isModalOpen.toString()}\n          onClick={e => {\n            if (e.target.dataset.name === 'overlay') {\n              handleClose();\n            }\n          }}\n        >\n          <div className={css.modal} visible={isModalOpen.toString()}>\n            <p className={css.label}>\n              <b>Edit name</b>\n            </p>\n            <form onSubmit={e => refreshContact(e)}>\n              <input\n                type=\"text\"\n                name=\"name\"\n                className={css.input}\n                defaultValue={contactToEdit.name}\n              />\n              <p className={css.label}>\n                <b>Edit number</b>\n              </p>\n              <input\n                type=\"tel\"\n                name=\"number\"\n                className={css.input}\n                defaultValue={contactToEdit.number}\n              />\n\n              <button\n                type=\"submit\"\n                name=\"close-button\"\n                className={css.close__button}\n              >\n                Save\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n      <div className={css.contacts}>\n        <ul className={css.list}>\n          {filteredContacts &&\n            filteredContacts.map(contact => {\n              return (\n                <li className={css.li} key={contact.id}>\n                  <div>\n                    <span className={css.name}>{contact.name}</span>\n                    <span className={css.number}>{contact.number}</span>\n                  </div>\n                  <div className={css.icons}>\n                    <img\n                      src={editIcon}\n                      className={css.edit}\n                      alt=\"edit\"\n                      width=\"16px\"\n                      onClick={() => handleOpen(contact)}\n                    />\n                    <button\n                      type=\"button\"\n                      className={css.delete}\n                      onClick={() => handleDeleteContact(contact.id)}\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </li>\n              );\n            })}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"button\":\"ContactForm_button__eSwX9\",\"input\":\"ContactForm_input__Bl93P\",\"label\":\"ContactForm_label__-cVXI\"};","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'Redux/operations';\nimport { selectContact } from './../../Redux/selectors';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContact);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const newContact = {\n      name: event.target.name.value,\n      number: event.target.number.value,\n    };\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      event.target.reset();\n      return alert(`${newContact.name} \"is already in contacts\"`);\n    } else {\n      dispatch(addContact(newContact));\n\n      event.target.reset();\n    }\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label>\n        <p className={css.label}>\n          <b>Name</b>\n        </p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          className={css.input}\n          placeholder=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        <p className={css.label}>\n          <b>Number</b>\n        </p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          id=\"number\"\n          className={css.input}\n          placeholder=\"phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.button}>\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"tittle\":\"Section_tittle__ZAMMr\",\"section\":\"Section_section__Z2PLw\"};","import css from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className={css.section}>\n      <h1 className={css.title}>{title}</h1>\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from './../../Redux/filterSlice';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className={css.filter}>\n      <label>\n        Search contacts by name\n        <input\n          className={css.input}\n          type=\"search\"\n          placeholder=\"search contact\"\n          onChange={event => dispatch(setFilter(event.target.value))}\n        ></input>\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"contacts_contacts__fZIeZ\"};","import ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Section from 'components/Section/Section';\nimport Filter from 'components/Filter/Filter';\nimport css from './contacts.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'Redux/auth/selectors';\n\nconst Contacts = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  return isLoggedIn ? (\n    <div className={css.contacts}>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </div>\n  ) : (\n    <p>You need to login first</p>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContact","state","contacts","items","selectFilteredContacts","filter","selectFilter","contact","name","toLowerCase","includes","dispatch","useDispatch","filteredContacts","useSelector","useState","isModalOpen","setIsModalOpen","contactToEdit","setContactToEdit","handleClose","useEffect","fetchContacts","className","css","visible","toString","onClick","e","target","dataset","onSubmit","preventDefault","currentTarget","value","number","editedContact","id","editContact","refreshContact","type","defaultValue","map","src","editIcon","alt","width","handleOpen","deleteContact","event","newContact","find","reset","alert","addContact","placeholder","pattern","title","required","children","onChange","setFilter","selectIsLoggedIn"],"sourceRoot":""}